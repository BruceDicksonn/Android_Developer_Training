// Generated by view binder compiler. Do not edit!
package com.example.droidcafe.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Spinner;
import android.widget.TextView;
import com.example.droidcafe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOrderBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText address;

  @NonNull
  public final Spinner labelSpinner;

  @NonNull
  public final LinearLayout linearAddress;

  @NonNull
  public final LinearLayout linearMethod;

  @NonNull
  public final LinearLayout linearName;

  @NonNull
  public final LinearLayout linearNote;

  @NonNull
  public final LinearLayout linearPhone;

  @NonNull
  public final RadioButton methodNextDay;

  @NonNull
  public final RadioButton methodPickup;

  @NonNull
  public final RadioButton methodSameDay;

  @NonNull
  public final EditText name;

  @NonNull
  public final EditText note;

  @NonNull
  public final TextView orderTextview;

  @NonNull
  public final EditText phone;

  @NonNull
  public final RadioGroup radioGroupMethods;

  private ActivityOrderBinding(@NonNull ConstraintLayout rootView, @NonNull EditText address,
      @NonNull Spinner labelSpinner, @NonNull LinearLayout linearAddress,
      @NonNull LinearLayout linearMethod, @NonNull LinearLayout linearName,
      @NonNull LinearLayout linearNote, @NonNull LinearLayout linearPhone,
      @NonNull RadioButton methodNextDay, @NonNull RadioButton methodPickup,
      @NonNull RadioButton methodSameDay, @NonNull EditText name, @NonNull EditText note,
      @NonNull TextView orderTextview, @NonNull EditText phone,
      @NonNull RadioGroup radioGroupMethods) {
    this.rootView = rootView;
    this.address = address;
    this.labelSpinner = labelSpinner;
    this.linearAddress = linearAddress;
    this.linearMethod = linearMethod;
    this.linearName = linearName;
    this.linearNote = linearNote;
    this.linearPhone = linearPhone;
    this.methodNextDay = methodNextDay;
    this.methodPickup = methodPickup;
    this.methodSameDay = methodSameDay;
    this.name = name;
    this.note = note;
    this.orderTextview = orderTextview;
    this.phone = phone;
    this.radioGroupMethods = radioGroupMethods;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address;
      EditText address = ViewBindings.findChildViewById(rootView, id);
      if (address == null) {
        break missingId;
      }

      id = R.id.label_spinner;
      Spinner labelSpinner = ViewBindings.findChildViewById(rootView, id);
      if (labelSpinner == null) {
        break missingId;
      }

      id = R.id.linearAddress;
      LinearLayout linearAddress = ViewBindings.findChildViewById(rootView, id);
      if (linearAddress == null) {
        break missingId;
      }

      id = R.id.linearMethod;
      LinearLayout linearMethod = ViewBindings.findChildViewById(rootView, id);
      if (linearMethod == null) {
        break missingId;
      }

      id = R.id.linearName;
      LinearLayout linearName = ViewBindings.findChildViewById(rootView, id);
      if (linearName == null) {
        break missingId;
      }

      id = R.id.linearNote;
      LinearLayout linearNote = ViewBindings.findChildViewById(rootView, id);
      if (linearNote == null) {
        break missingId;
      }

      id = R.id.linearPhone;
      LinearLayout linearPhone = ViewBindings.findChildViewById(rootView, id);
      if (linearPhone == null) {
        break missingId;
      }

      id = R.id.method_nextDay;
      RadioButton methodNextDay = ViewBindings.findChildViewById(rootView, id);
      if (methodNextDay == null) {
        break missingId;
      }

      id = R.id.method_pickup;
      RadioButton methodPickup = ViewBindings.findChildViewById(rootView, id);
      if (methodPickup == null) {
        break missingId;
      }

      id = R.id.method_sameDay;
      RadioButton methodSameDay = ViewBindings.findChildViewById(rootView, id);
      if (methodSameDay == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.note;
      EditText note = ViewBindings.findChildViewById(rootView, id);
      if (note == null) {
        break missingId;
      }

      id = R.id.order_textview;
      TextView orderTextview = ViewBindings.findChildViewById(rootView, id);
      if (orderTextview == null) {
        break missingId;
      }

      id = R.id.phone;
      EditText phone = ViewBindings.findChildViewById(rootView, id);
      if (phone == null) {
        break missingId;
      }

      id = R.id.radioGroupMethods;
      RadioGroup radioGroupMethods = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupMethods == null) {
        break missingId;
      }

      return new ActivityOrderBinding((ConstraintLayout) rootView, address, labelSpinner,
          linearAddress, linearMethod, linearName, linearNote, linearPhone, methodNextDay,
          methodPickup, methodSameDay, name, note, orderTextview, phone, radioGroupMethods);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
